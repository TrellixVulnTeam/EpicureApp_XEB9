{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/Epicure-app/src/components/pages/restaurantPage/RestaurantPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport Footer from \"../../footer/Footer\";\nimport Header from \"../../header/Header\";\nimport dummy from \"../../DummyData\";\nimport clock from \"../../../assets/clock-icon.svg\";\nimport NavLinkTemplate from \"../../layout/button/NavLinkTemplate\";\nimport DishSmallCard from \"../../layout/card/DishSmallCard\";\nimport \"./RestaurantPage.scss\";\nimport { useState } from \"react\";\nimport Context from \"../../../context/Context\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RestaurantPage = () => {\n  _s();\n\n  const [openDishCard, setOpenDishCard] = useState(false);\n  const [choosenDish, setChoosenDish] = useState(\"\");\n\n  const openDishCardHandler = choosenSignatureName => {\n    var _event;\n\n    (_event = event) === null || _event === void 0 ? void 0 : _event.preventDefault();\n    setChoosenDish(choosenSignatureName);\n    setOpenDishCard(true);\n  };\n\n  const params = useParams();\n  const restaurantDetails = dummy.filter(item => item.restaurantName == params.restaurantName);\n  const mealsTypes = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n  const ctx = useContext(Context);\n  console.log(ctx);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      openDishCard: openDishCard\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: restaurantDetails[0].desktopImage,\n        alt: \"restaurant\",\n        className: \"restaurant-page-img\",\n        srcSet: `${restaurantDetails[0].bigImage} 800w`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: params.restaurantName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: restaurantDetails[0].chefName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: clock,\n        alt: \"clock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Open now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"categories-div\",\n        children: mealsTypes.map(type => /*#__PURE__*/_jsxDEV(NavLinkTemplate, {\n          content: type,\n          to: `/${type}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"restaurants-container\",\n        children: restaurantDetails.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"to-dish-btn\",\n            onClick: () => openDishCardHandler(item.signatureName),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"restaurant-item\",\n              children: /*#__PURE__*/_jsxDEV(DishSmallCard, {\n                img: item.signatureImage,\n                signatureDesktopImage: item.signatureDesktopImage,\n                title: item.signatureName,\n                detail: item.signatureDescription,\n                price: item.price\n              }, item.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RestaurantPage, \"KqLbyxRQ/SVXQgtnk0HboXCG6vw=\", false, function () {\n  return [useParams];\n});\n\n_c = RestaurantPage;\nexport default RestaurantPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantPage\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/Epicure-app/src/components/pages/restaurantPage/RestaurantPage.tsx"],"names":["useParams","Footer","Header","dummy","clock","NavLinkTemplate","DishSmallCard","useState","Context","useContext","RestaurantPage","openDishCard","setOpenDishCard","choosenDish","setChoosenDish","openDishCardHandler","choosenSignatureName","event","preventDefault","params","restaurantDetails","filter","item","restaurantName","mealsTypes","ctx","console","log","desktopImage","bigImage","chefName","map","type","signatureName","signatureImage","signatureDesktopImage","signatureDescription","price","key"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport Footer from \"../../footer/Footer\";\nimport Header from \"../../header/Header\";\nimport dummy from \"../../DummyData\";\nimport clock from \"../../../assets/clock-icon.svg\";\nimport NavLinkTemplate from \"../../layout/button/NavLinkTemplate\";\nimport DishSmallCard from \"../../layout/card/DishSmallCard\";\nimport \"./RestaurantPage.scss\";\nimport { Fragment, useState } from \"react\";\nimport Context from \"../../../context/Context\";\nimport { useContext } from \"react\";\n\nconst RestaurantPage = () => {\n  const [openDishCard, setOpenDishCard] = useState(false);\n  const [choosenDish, setChoosenDish] = useState(\"\");\n\n  const openDishCardHandler = (choosenSignatureName: string) => {\n    event?.preventDefault();\n    setChoosenDish(choosenSignatureName);\n    setOpenDishCard(true);\n  };\n  const params: any = useParams();\n  const restaurantDetails = dummy.filter(\n    (item) => item.restaurantName == params.restaurantName\n  );\n  const mealsTypes: string[] = [\"Breakfast\", \"Lunch\", \"Dinner\"];\n  const ctx= useContext(Context);\n  console.log(ctx);\n  return (\n    <Context.Provider value={{openDishCard:openDishCard}}>\n      <Header />\n      <div>\n        <img\n          src={restaurantDetails[0].desktopImage}\n          alt=\"restaurant\"\n          className=\"restaurant-page-img\"\n          srcSet={`${restaurantDetails[0].bigImage} 800w`}\n        ></img>\n        <h1>{params.restaurantName}</h1>\n        <h2>{restaurantDetails[0].chefName}</h2>\n        <img src={clock} alt=\"clock\"></img> <span>Open now</span>\n        <nav className=\"categories-div\">\n          {mealsTypes.map((type) => (\n            <NavLinkTemplate content={type} to={`/${type}`} />\n          ))}\n        </nav>\n        <div className=\"restaurants-container\">\n          {restaurantDetails.map((item) => {\n            return (\n              <button\n                className=\"to-dish-btn\"\n                onClick={() => openDishCardHandler(item.signatureName)}\n              >\n                <div className=\"restaurant-item\">\n                  <DishSmallCard\n                    img={item.signatureImage}\n                    signatureDesktopImage={item.signatureDesktopImage}\n                    title={item.signatureName}\n                    detail={item.signatureDescription}\n                    price={item.price}\n                    key={item.key}\n                  ></DishSmallCard>\n                </div>\n              </button>\n            );\n          })}\n        </div>\n      </div>\n      <Footer />\n      </Context.Provider>\n  );\n};\n\nexport default RestaurantPage;\n"]},"metadata":{},"sourceType":"module"}