{"ast":null,"code":"var _jsxFileName = \"/Users/yardentsaraf/Desktop/Epicure-app/src/components/pages/allChefsPage/ChefsGrid.tsx\";\nimport React from \"react\";\nimport BeigeCard from \"../../layout/card/BeigeCard\";\nimport { connect } from \"react-redux\";\nimport { addData } from \"../../../store/action\";\nimport './AllChefs.scss';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst object = {\n  a: 5,\n  b: 6,\n  c: 7\n};\n\nconst picked = (_ref => {\n  let {\n    a,\n    c\n  } = _ref;\n  return {\n    a,\n    c\n  };\n})(object);\n\nconst ChefsGrid = () => {\n  let uniqueName = [new Set(addData.payload.map(chef => chef.chefName))];\n  let uniqueDesc = [new Set(addData.payload.map(chef => chef.chefDescription))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurants-grid\",\n    children: [unique.map(item => {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        to: `/ChefPage/${item}`,\n        className: \"to-chef-btn\",\n        children: /*#__PURE__*/_jsxDEV(BeigeCard, {\n          title: item.chefName,\n          detail: item.chefDescription,\n          img: item.chefImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 66\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    }), \" */}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChefsGrid;\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addData: () => dispatch(addData)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChefsGrid);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChefsGrid\");","map":{"version":3,"sources":["/Users/yardentsaraf/Desktop/Epicure-app/src/components/pages/allChefsPage/ChefsGrid.tsx"],"names":["React","BeigeCard","connect","addData","Link","object","a","b","c","picked","ChefsGrid","uniqueName","Set","payload","map","chef","chefName","uniqueDesc","chefDescription","unique","item","chefImage","mapStateToProps","state","data","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAO,iBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;;AACA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE,CAAX;AAAcC,EAAAA,CAAC,EAAE;AAAjB,CAAf;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAA,MAAC;AAAEH,IAAAA,CAAF;AAAKE,IAAAA;AAAL,GAAD;AAAA,SAAe;AAAEF,IAAAA,CAAF;AAAKE,IAAAA;AAAL,GAAf;AAAA,CAAD,EAA2BH,MAA3B,CAAf;;AAGA,MAAMK,SAAgD,GAAG,MAAM;AACvD,MAAIC,UAAU,GAAE,CAAC,IAAIC,GAAJ,CAAQT,OAAO,CAACU,OAAR,CAAgBC,GAAhB,CAAqBC,IAAD,IAASA,IAAI,CAACC,QAAlC,CAAR,CAAD,CAAhB;AACA,MAAIC,UAAU,GAAE,CAAC,IAAIL,GAAJ,CAAQT,OAAO,CAACU,OAAR,CAAgBC,GAAhB,CAAqBC,IAAD,IAASA,IAAI,CAACG,eAAlC,CAAR,CAAD,CAAhB;AAEN,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,eACGC,MAAM,CAACL,GAAP,CAAYM,IAAD,IAAU;AACpB,0BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,aAAYA,IAAK,EAA5B;AAA+B,QAAA,SAAS,EAAC,aAAzC;AAAA,+BAAuD,QAAC,SAAD;AACrD,UAAA,KAAK,EAAEA,IAAI,CAACJ,QADyC;AAErD,UAAA,MAAM,EAAEI,IAAI,CAACF,eAFwC;AAGrD,UAAA,GAAG,EAAEE,IAAI,CAACC;AAH2C;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARA,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjBD;;KAAMX,S;;AAkBN,MAAMY,eAAe,GAAIC,KAAD,KAA2B;AAAEC,EAAAA,IAAI,EAAED,KAAK,CAACC;AAAd,CAA3B,CAAxB;;AAEA,MAAMC,kBAAkB,GACtBC,QADyB,IAEtB;AACH,SAAO;AACLvB,IAAAA,OAAO,EAAE,MAAMuB,QAAQ,CAACvB,OAAD;AADlB,GAAP;AAGD,CAND;;AAOA,eAAeD,OAAO,CAACoB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,SAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport BeigeCard from \"../../layout/card/BeigeCard\";\nimport { connect } from \"react-redux\";\nimport { addData } from \"../../../store/action\";\nimport './AllChefs.scss';\nimport { Link } from \"react-router-dom\";\nconst object = { a: 5, b: 6, c: 7  };\nconst picked = (({ a, c }) => ({ a, c }))(object);\n\n\nconst ChefsGrid: React.FC<{ addData: any; data: any }> = () => {\n        let uniqueName= [new Set(addData.payload.map((chef)=> chef.chefName))];\n        let uniqueDesc= [new Set(addData.payload.map((chef)=> chef.chefDescription))];\n\n  return (\n    <div className=\"restaurants-grid\">\n      {unique.map((item) => {\n        return (\n          <Link to={`/ChefPage/${item}`} className=\"to-chef-btn\"><BeigeCard\n            title={item.chefName}\n            detail={item.chefDescription}\n            img={item.chefImage}\n          ></BeigeCard></Link>\n        );\n      })} */}\n    </div>\n  );\n};\nconst mapStateToProps = (state: { data: any }) => ({ data: state.data });\n\nconst mapDispatchToProps = (\n  dispatch: (arg0: { type: string; payload: any }) => any\n) => {\n  return {\n    addData: () => dispatch(addData),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ChefsGrid);\n"]},"metadata":{},"sourceType":"module"}